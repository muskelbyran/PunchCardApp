﻿@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components.Web
@using PunchCardApp.Services

@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@using PunchCardApp.Data

@inject RoleService RoleService
@inject NavigationManager NavigationManager

@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [StreamRendering]

<div class="profile">
    @if (IsManager)
    {
         <div class="links">
            <NavLink class="link-btn btn-transparent" href="Admin/Landing"><i class="fa-regular fa-gear"></i>Meny></NavLink>
            <NavLink class="link-btn btn-transparent" href="Admin/Users"><i class="fa-solid fa-arrow-right-to-bracket"></i>Användare></NavLink>
            <NavLink><a class="link-btn btn-transparent" href="Admin/PunchCard"><i class="fa-solid fa-arrow-right-to-bracket"></i>Klippkort</a></NavLink>
            <NavLink><a class="link-btn btn-transparent" href="Admin/Changelog"><i class="fa-solid fa-arrow-right-to-bracket"></i>Uppdateringar</a></NavLink>
         </div>
    }
    @if (IsAdmin)
    {
        <div class="profile-info">
            <NavLink><a class="btn-transparent" href="Admin/Landing"><i class="fa-regular fa-gear"></i>Meny</a></NavLink>
            <NavLink><a class="btn-transparent" href="Admin/Users"><i class="fa-solid fa-arrow-right-to-bracket"></i>Användare</a></NavLink>
            <NavLink><a class="btn-transparent" href="Admin/PunchCard"><i class="fa-solid fa-arrow-right-to-bracket"></i>Klippkort</a></NavLink>
            <NavLink><a class="btn-transparent" href="Admin/Changelog"><i class="fa-solid fa-arrow-right-to-bracket"></i>Uppdateringar</a></NavLink>
            <p>Admin</p>
            <NavLink><a class="btn-transparent" href="Admin/Roles"><i class="fa-solid fa-arrow-right-to-bracket"></i>Behörighet</a></NavLink>
        </div>
    }
</div>

@code {
    private bool IsManager { get; set; }
    private bool IsAdmin { get; set; }
 
    protected override async Task OnInitializedAsync()
    {
        IsManager = await RoleService.IsManagerAsync();
        IsAdmin = await RoleService.IsAdminAsync();
    }
}