@page "/Admin/PunchCard"
@using PunchCardApp.Components.Assets
@using PunchCardApp.Models

@rendermode InteractiveServer

<PageTitle>Klippkort</PageTitle>
<AuthorizeView>
    <Authorized>
        <main class="main-content">
            <div class="content-card">
                <h3>Sök kund:</h3>
                <input class="form-control" type="text" placeholder="Search by First Name" @bind="searchString" />
                <button class="btn btn-primary mt-2" @onclick="SearchUsers">Search</button>
                @if (filteredUsers != null && filteredUsers.Count > 0)
                {
                    <table class="table mt-3">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>User Name</th>
                                <th>Email</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in filteredUsers)
                            {
                                <tr>
                                    <td>@user.Id</td>
                                    <td>@(user.UserProfile?.FirstName ?? "N/A") @(user.UserProfile?.LastName ?? "N/A")</td>
                                    <td>@user.Email</td>
                                    <td>
                                        <button class="btn btn-theme"
                                                @onclick="() => EditPunchCard(user.Id)">
                                            Edit
                                        </button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else if (filteredUsers != null)
                {
                    <p>No users found with the given first name.</p>
                }
            </div>
        </main>
    </Authorized>
</AuthorizeView>

@code {
    private List<ApplicationUser>? filteredUsers;
    private ApplicationUser selectedUser;
    private string? searchString;
   

    private async Task SearchUsers()
    {
        if (!string.IsNullOrWhiteSpace(searchString))
        {
            string normalizedSearchString = searchString.ToLower();

            filteredUsers = await DbContext.Users
                .Include(u => u.UserProfile)
                .Where(u => u.UserProfile != null && EF.Functions.Like(u.UserProfile.FirstName.ToLower(), $"%{normalizedSearchString}%"))
                .ToListAsync();
        }
        else
        {
            filteredUsers = new List<ApplicationUser>();
        }
    }

    private void EditPunchCard(string userId)
    {
        NavigationManager.NavigateTo($"/punchcards/edit/{userId}");
    }
}