﻿@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.AspNetCore.Components.Web

@inject HttpClient HttpClient
@inject AuthenticationStateProvider AuthenticationStateProvider

@attribute [StreamRendering]

@if(user == null)
{
    <p>Loading...</p>
}
else
{
   @*  <div class="profile">
        <h3>@(user.UserProfile?.FirstName ?? "No First Name") @(user.UserProfile?.LastName ?? "No Last Name")</h3>


        <div class="profile-info">
            <NavLink><a class="btn-transparent" href="Account/Deets"><i class="fa-regular fa-gear"></i>Meny</a></NavLink>
            <NavLink><a class="btn-transparent" href="Account/Manage/Notifications"><i class="fa-solid fa-arrow-right-to-bracket"></i>Klippkort</a></NavLink>
            <NavLink><a class="btn-transparent" href="Account/SavedCourses"><i class="fa-solid fa-arrow-right-to-bracket"></i>Konto</a></NavLink>
            <NavLink><a class="btn-transparent" href="Account/Manage/Logout"><i class="fa-solid fa-arrow-right-to-bracket"></i>Logga Ut</a></NavLink>
        </div>

        <NavLink><a class="btn-transparent" href="/Admin/Landing"><i class="fa-solid fa-arrow-right-to-bracket"></i>Admin</a></NavLink>

    </div> *@
}

@code {
    [Parameter]
    public ApplicationUser user { get; set; } = default!;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    private void HandleSignOut()
    {
        NavigationManager.NavigateTo("authentication/logout", forceLoad: true);
    }
}